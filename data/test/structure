数据结构是一门 研究 非数值计算的程序设计中计算机的 操作对象 以及他们之间的 关系和操作 的学科
数据 = 一张列表  
数据元素 = 一行
数据项 = 一个单元格
数据对象 = 一列
 
数据结构包括三个方面的内容：
数据元素之间的逻辑关系，也称为逻辑结构。
数据元素及其关系在内存中的表示（映像），称为数据的存储结构
数据的运算和实现，即对数据元素可以施加的操作以及这些操作在相应的存储结构上的实现

逻辑结构：描述数据元素之间的逻辑关系，与数据的存储无关，独立于计算机，是从具体问题抽象出来的数学模型
物理结构：数据元素及其关系在计算机存储器中的结构，是数据结构在计算机中的表示

逻辑结构的划分方法：一(线性结构，非线性结构)
1)线性结构 1:1
	有且仅有一个开始和一个终端结点，并且所有结点都要最多只有一个直接前趋和一个直接后继
	例如：线性表、栈、队列、串
2)非线性结构 1:N & N:N
	一个结点可能有多个直接前趋和直接后继
	例如：树、图

逻辑结构的划分方法：二(集合，线性，树，图)
1)集合结构
	结构中的数据元素之间除了同属于一个集合的关系外，无任何其它关系
2)线性结构
	结构中的数据元素之间存在着 1:1 的线性关系
3)树形结构
	结构中的数据元素之间存在着 1:N 的层次结构
4)图状结构 或 网状结构
	结构中的数据元素之间存在着 N:N 的任意关系
 
存储结构的种类
1)顺序存储结构(1:1 & 1:N & N:N）
	用一组连续的存储单元依次存储数据元素，数据元素之间的逻辑关系由存储位置来表示
	C语言中用 数组 来实现顺序存储结构
	例:(bat,cat,eat,......)
2)链式存储结构
	用一组任意的存储单元存储数据元素，数据元素之间的逻辑关系用指针来表示
	C语言中用 指针 来实现链式存储结构
	例:(bat,cat,eat,...,mat)
3)索引(index)存储结构(自学)
	在存储结点信息的同时，还建立附加的索引表
4)散列存储结构(自学)
	null

抽象数据类型(Abstract Data Type,ADT)
	是指一个数学模型以及定义在此数学模型上的一组操作
		由用户定义，从问题抽象出数据模型(逻辑结构)
		还包括定义在数据模型上的一组操作(抽象运算)
		不考虑计算机内的具体存储结构与运算的具体实现算法
 
《数据结构与算法》的研究内容
	逻辑结构：研究对象的特性及其相互之间的关系
	存储结构：有效地组织计算机存储
	算法：有效地实现对象之间的“运算”关系

算法的定义
	对特定问题求解方法和步骤的一种描述，它是指令的有限序列
	其中每个指令表示一个或多个操作
	step1:...
	step2:...
	.
	.
	stepN:...













